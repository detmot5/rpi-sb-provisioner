<!DOCTYPE html>
<html>
<head>
    <title>Device List</title>
    <%view stylesheet %>
</head>
<body>
    <%view navbar %>

    <%c++ 
    bool hasWarning = false;
    std::string warningMessage;
    try {
        warningMessage = @@.get<std::string>("warning");
        hasWarning = !warningMessage.empty();
    } catch(...) {
        // No warning message found, ignore
    }
    
    if (hasWarning) { 
    %>
    <div class="warning-block">
        [[warning]]
    </div>
    <%c++ } %>
    <h1>Device List</h1>
    
    <%view auto_refresh_toggle %>
    
    <div id="device-table-container">
        <table>
            <thead>
                <tr>
                    <th>Serial Number</th>
                    <th>Port</th>
                    <th>IP Address</th>
                    <th>State</th>
                    <th>Image</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            <%c++ 
            auto devicesList = @@.get<std::vector<std::map<std::string, std::string>>>("devices");
            if(devicesList.size() > 0) {
            %>
                <%c++ for(const auto& device : devicesList) { %>
                    <tr>
                        <td><%c++ $$ << device.at("serial"); %></td>
                        <td><%c++ $$ << device.at("port"); %></td>
                        <td><%c++ $$ << device.at("ip_address"); %></td>
                        <td><%c++ $$ << device.at("state"); %></td>
                        <td><%c++ $$ << device.at("image"); %></td>
                        <td>
                            <a href="/devices/<%c++ $$ << device.at("serial"); %>/log/provisioner" class="log-link">Provisioner Log</a><br>
                            <a href="/devices/<%c++ $$ << device.at("serial"); %>/log/bootstrap" class="log-link">Bootstrap Log</a><br>
                            <a href="/devices/<%c++ $$ << device.at("serial"); %>/log/triage" class="log-link">Triage Log</a>
                        </td>
                    </tr>
                <%c++ } %>
            <%c++ } else { %>
                    <tr>
                        <td colspan="6" class="no-devices">No devices available</td>
                    </tr>
            <%c++ } %>
            </tbody>
        </table>
    </div>

    <script>
        // Function to fetch and update the device table
        async function refreshDeviceTable() {
            try {
                const response = await fetch('/devices', {
                    headers: {
                        'Accept': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error('Failed to fetch devices');
                }
                
                const data = await response.json();
                
                // Create a new table with the updated data
                let tableHtml = `
                    <table>
                        <thead>
                            <tr>
                                <th>Serial Number</th>
                                <th>Port</th>
                                <th>IP Address</th>
                                <th>State</th>
                                <th>Image</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                `;
                
                if (data.devices && data.devices.length > 0) {
                    data.devices.forEach(device => {
                        tableHtml += `
                            <tr>
                                <td>${device.serial}</td>
                                <td>${device.port}</td>
                                <td>${device.ip_address || ''}</td>
                                <td>${device.state}</td>
                                <td>${device.image}</td>
                                <td>
                                    <a href="/devices/${device.serial}/log/provisioner" class="log-link">Provisioner Log</a><br>
                                    <a href="/devices/${device.serial}/log/bootstrap" class="log-link">Bootstrap Log</a><br>
                                    <a href="/devices/${device.serial}/log/triage" class="log-link">Triage Log</a>
                                </td>
                            </tr>
                        `;
                    });
                } else {
                    tableHtml += `
                        <tr>
                            <td colspan="6" class="no-devices">No devices available</td>
                        </tr>
                    `;
                }
                
                tableHtml += `
                        </tbody>
                    </table>
                `;
                
                tableContainer.innerHTML = tableHtml;
            } catch (error) {
                console.error('Error refreshing device table:', error);
            }
        }
        
        // Initialize the table container reference
        const tableContainer = document.getElementById('device-table-container');
        
        // Initialize auto-refresh with the device table refresh function
        initAutoRefresh(refreshDeviceTable);
    </script>
</body>
</html> 